@charset "UTF-8";

/* Robot PJ - Animation CSS File */

/* 
[ CSS에서 애니메이션 구현하기 : animation ]

- html요소의 변화를 키프레임(장면)에 주고 이를 호출하여
브라우저에서 애니메이션이 연출 될 수 있게 하는 CSS 구현기술

[ 키프레임이란? ]
- 애니메이션 변화를 지정하는 코딩영역

[ 2장면 코딩법 ]

@keyframes 키프레임명{
    from{시작CSS}
    to{마지막CSS}
}

[ 여러장면 코딩법 ]
- 퍼센트로 장면을 분할하여 사용함
(무한대의 장면 연출가능)

@keyframes 키프레임명{
    0%{CSS설정}
    10%{CSS설정}
    20%{CSS설정}
    ...
    90%{CSS설정}
    100%{CSS설정}
} */

/* 키프레임(장면연출) */

/* 1-1. 로봇 등장 키프레임 */
@keyframes showRobot {
    100%{
        transform: 
        scale(.6)
        translate(0 0);
    }
}
@keyframes showRobot2 {
    0%{
        transform: rotate(0);
    }
    50%{
        
        transform: rotate(360deg);
    }
    100%{
        transform: rotate(-360deg);

    }
}


/* 로고 중앙에서 왼쪽 위로 이동하기 */
@keyframes logoAni {
    80%{
        top: 50px;
        left: 50px;
        transform: 
        scale(1); 
    }
    100%{
        top: 50px;
        left: 50px;
        transform: 
        scale(1) 
        rotate(-20deg);
    }
    
}
@keyframes logoRo {
    0%{
        transform: rotate(-20deg);
    }
    100%{
        transform: rotate(20deg);
    }
}


/* 왼팔 살짝 올리기 */
@keyframes leftArm1 {
    to{transform: rotate(25deg);}
}
@keyframes leftArm2 {
    to{transform: rotate(149deg);}
}
@keyframes leftArm3 {
    to{transform: rotate(-38deg);}
}

@keyframes rightArm1 {
    to{
        transform: rotate(226deg);
    }
}
@keyframes rightArm1-1 {
    from{transform: rotate(-114deg);}
    to{
        transform: rotate(-124deg);
    }
}
@keyframes rightArm2 {
    from{transform:rotate(30deg);}
    to{transform: rotate(-30deg);}
}
@keyframes rightArm3 {
    from{
        transform: 
        rotateY(180deg)
        rotate(-50deg);
        left: 2px;
    }
    to{
        transform: 
        rotateY(180deg)
        rotate(50deg);
        left: 2px;
    }
}

/* 
    [ 애니메이션 기본특성 ]
    1. 기본적으로 1회만 실행
    2. 애니메이션 후 처음 설정된 값으로 돌아감
    3. 반복할 경우 시작->끝 순으로 반복됨
    
    [ 기본특성 변경하기 ]
    1. 반복실행 하고 싶으면 반복여부(animation-iteration-count) 속성값으로 반복횟수를 쓰거나
    계속 반복실행하고 싶으면 infinite
    2. 마지막 애니메이션 상태로 끝나고 싶을 때는 마지막 상태(animation-fill-mod) 속성값을
    forwards로 작성
    3. 시작->끝, 끝->시작 반복 애니메이션을 역순으로 설정하고 싶으면
    (animation-direction) 속성값을 aleterenate으로 작성
    */
    
    
    /* 1-2 키프레임 호출 설정 */
.logo{
    animation: logoAni 3s ease-in-out forwards,
    logoRo .5s linear 3s infinite alternate;
} 
    

.robx{
    transform: 
    scale(0.6);
}
.robx>div{
    animation: showRobot2 3s ease-in-out forwards;
}
.a1{
    animation: leftArm1 1s ease-in 3s forwards;
}
.a1 span{
    animation: leftArm2 2s ease-in 4s forwards;
}
.a1 span::after{
    animation: leftArm3 1s ease-in 6.2s forwards;
}

.a2{
    animation: 
    rightArm1 1s ease-in-out 3s forwards;
    
}
.a2 span{
    animation: rightArm2 .5s linear 4s  infinite alternate;
}
.a2 span::after{
    animation: rightArm3 .5s linear 4s infinite alternate;
}

