@charset "UTF-8";
/* Open Door CSS파일 */
/* 웹폰트 */
@import url('https://fonts.googleapis.com/css2?family=Comfortaa:wght@700&display=swap');

/* font-family: 'Comfortaa', cursive; */

html, body, h1{
    margin: 0;
    padding: 0;
}
body{
    background-color: rgb(254, 255, 179);
}

h1.tit{
    text-align: center;
    font-family: "Comfortaa";
    font-size: min(5vw, 42px);
    margin: 5vh 0;
    color: #fff;
    text-shadow: 2px 2px 2px #000;
    overflow: hidden;
}
.tit span{
    display: block;
    transform: translateY(100%);
    animation: titAni .4s ease-out 1s forwards;
}
@keyframes titAni {
    to{
        transform: translateY(0);
    }
}
.cont{
    width: 200px;
    height: 300px;
    margin: 0 auto;
    background-color: #900;
}
.frame{
    position: relative;
    top: 20px;  
    width: 150px;
    height: 280px;
    margin: 0 auto;
    background: url(../images/seashore.jpg) no-repeat center/auto 100%;
    animation: waveAni 3s ease-in-out 1s infinite alternate;
    
    /*********************************************** 
        [ 3D 원근설정 ]
        1. 세팅위치: 3D원근 설정을 할 대상의 부모요소
        2. 설정방법: perspective:수치; -> 수치는 px단위로 숫자가 클 수록 소실점이 멀어지므로 각도가 작아짐(이 거리는 기준점에서 소실점까지의 거리)
    
        [ 뷰포인트(관찰자위치) 변경옵션 ]
        perpective-origin : 가로 세로;
        - 가로축: left, center, right, px, % 등 단위
        - 세로축: top, center, bottom, px, % 등 단위
        -> 두 값 중에 하나만 쓸 수 있고 복합일 경우
        2가지를 같이 셋팅함!
    ***********************************************/
    perspective: 380px;

    
}
.door{
    position: relative;
    /* .handle의 부모자격 */
    z-index: 1;
    width: 150px;
    height: 280px;
    background-color: #c90;
    
    /* 문짝 회전 */
    transform-origin:left;
    transform: rotateY(0deg);
    animation:
    /* 첫 1초간 열린후 끝상태 유지 */ 
    openFirst 1s ease-in-out forwards,
    /* 계속 여닫기 애니 1초후 작동 */
    openDoor 2s ease-in-out 1s infinite alternate;
    
    /* 애니메이션 상태관리 
    속성:
    running -> 작동
    paused -> 멈춤
    */
    animation-play-state: paused;
}
/* 마우스 오버시 문열기 애니 작동 */
.cont:hover .door, .cont:hover #elsa img{
    animation-play-state: running;
}

/* 문 처음열기 키프레임 */
@keyframes openFirst {
    to{
        transform: rotateY(60deg);
    }
}/* openFirst 키프레임 ********* */

/* 문 열고 닫기 키프레임 */
@keyframes openDoor {
    0%{
        transform: rotateY(60deg);
    }
    100%{
        transform: rotateY(-60deg);
    }
}/* openDoor 키프레임 ***********/


@keyframes waveAni {
    to{
        background-size: auto 110%;
    }
}

.handle{
    position: absolute;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #00a;
    top: 50%;
    right: 10px;
}

/* 엘사 박스 */
#elsa{
    position: absolute;
    top: 0;
    width: 150px;
    height: 280px;
    /* 엘사 이미지 숨기기 */
    overflow: hidden;
}
/* 엘사 이미지 */
#elsa img{
    margin-left: 150px;
    transform-origin: bottom left;
    animation: elsaAni 1s ease-in-out infinite alternate;
    animation-play-state: paused;
}

@keyframes elsaAni {
    0%{
        transform: rotate(0deg);
    }
    100%{
        transform: rotate(-12deg);
    }
}