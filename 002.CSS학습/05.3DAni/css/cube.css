@charset "UTF-8";

/* 큐브 애니메이션 CSS - cube.css */

html, body{
    margin: 0;
    padding: 0;
}
body{
    background-image: linear-gradient(to right bottom, rgb(144, 239, 252), rgb(255, 253, 145));
    height: 100vh;
}

/* 변수세팅 */
:root{
    /* 큐브 공통 크기 */
    --csz: 300px;
}


/* 작동버튼 */
.btngo{
    position: fixed;
    top: 5%;
    left: 50%;
    transform: translateX(-50%);
    font-size: 40px;
    border-radius: 10px;
    cursor: pointer;
}
.btngo:hover{
    background-color: lime;
}


/* 큐브 */
.cube{
    position: absolute;
    top: calc(50% - var(--csz)/2);
    left: calc(50% - var(--csz)/2);
    width: var(--csz);
    height: var(--csz);

    /* 
        [입체로 설정하기] 
        - 입체로 설정할 요소의 부모박스에 아래와 같이 설정함
        transform-style: preserve-3d;
        - 기본값은 2D설정인 flat
    */
    transform-style: preserve-3d;

    /* 입체를 잘 보이게 하기 위해서 살짝 회전 */
    transform: rotateX(10deg) rotateY(30deg);


    /* outline: 2px solid red; */
}

/* 큐브각면 공통 */
.cube span{
    position: absolute;
    /* absolute는 자동 블록 */
    width: 100%;    
    height: 100%;


    opacity: 0.8;
    outline: 1px solid #555;
}

/* 1. 앞면 */
.cube span:nth-child(1){
    background: url(../images/newyorkCity.jpg) no-repeat right/auto 105%;

    /* 화면방향(z축) */
    transform: translateZ(calc(var(--csz)/2));
    /* 큐브사이즈 절반을 앞쪽으로 이동 */
}

/* 2. 오른쪽 면 */
.cube span:nth-child(2){
    background: url(../images/seoulCity.jpg) no-repeat center/cover;

    transform: 
    rotateY(90deg)
    translateZ(calc(var(--csz)/2));
    /* 먼저 Y축 회전 후 큐브사이즈 절반을 앞쪽으로 이동 */
}

/* 3. 뒤쪽면 */
.cube span:nth-child(3){
    background: url(../images/parisCity.jpg) no-repeat center/cover;

    transform: 
    rotateY(180deg)
    translateZ(calc(var(--csz)/2));
    /* 먼저 Y축 회전 후 큐브사이즈 절반을 앞쪽으로 이동 */
}

/* 4. 왼쪽면 */
.cube span:nth-child(4){
    background: url(../images/cityMain.jpg) no-repeat center/cover;

    transform: 
    rotateY(-90deg)
    translateZ(calc(var(--csz)/2));
    /* 먼저 Y축 회전 후 큐브사이즈 절반을 앞쪽으로 이동 */
}

/* 5. 윗면 */
.cube span:nth-child(5){
    background: url(../images/citys.jpg) no-repeat center/cover;

    transform: 
    rotateX(90deg)
    translateZ(calc(var(--csz)/2));
    /* 먼저 Y축 회전 후 큐브사이즈 절반을 앞쪽으로 이동 */
}

/* 6. 아랫면 */
.cube span:nth-child(6){
    background: url(../images/London_city.jpg) no-repeat center/cover;

    transform: 
    rotateX(-90deg)
    translateZ(calc(var(--csz)/2));
    /* 먼저 Y축 회전 후 큐브사이즈 절반을 앞쪽으로 이동 */
}

/* 큐브회전 클래스 */
.cube-ani{
    animation: cubeAni 4s linear infinite;
    /* 애니메이션 처음에 멈춰있기 */
    animation-play-state: paused;
}

/* 큐브회전 작동 클래스 + .on */
.cube-ani.on{
    /* 애니메이션 작동하기 */
    animation-play-state: running;
}

/* 큐브회전 키프레임 */
@keyframes cubeAni {
    to{
        transform: 
        rotateX(370deg) 
        rotateY(-330deg);
        /* 
            X축 양의 방향으로 10도에서 출발 같은 양의 방향으로 10도+360도 = 370도
            -> 음의 방향으로는 10도-360도 = -350도
            _______________________________________
            
            Y축 양의 방향으로 30도에서 출발 같은 양의 방향으로 30도+360도 = 390도
            -> 음의 방향으로는 30도-360도 = -330도
        */

        /* Z축 회전도 적용할 수 있음 */
    }
}