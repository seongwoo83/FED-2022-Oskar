​‌‌‍⁡⁢⁣⁣[ 리액트 배포용 소스 깃허브에 호스팅하기 ]⁡​

1. 리액트 SPA 개발환경 소스를 빌드한다
-> 빌드 명령어: npm build
-> 빌드 후 build 폴더 생성됨(다시 빌드시 매번 갱신)
(참고: build폴더/node_modules폴더는 기본적으로 소스관리 폴더에서 제와하여 업로드 하지 않음)

2. 깃허브 실서버용 레포지토리를 생성함

3. 깃허브 pages에 서버를 공개한다
(단, 소스를 올린 후 index파일이 있어야함)

4. 깃허브 실서버용 소스 공간에 업로드함

5. pages에 공개한 주소를 카피함
(1) 깃허브 첫페이지에 링크주소 등록(편리함 때문)
(2) 개발 소스 package.json파일에
"homepage": 깃허브주소 를 등록해준다
(배포시에만 넣고 개발시에는 뺌- 있는 json을 백업)
->>> 본 세팅을 반드시 빌드전에 넣고 빌드할 것


[ 배포전 라우터 소스 수정하여 빌드하기 ]
- 깃허브는 기본적으로 SPA가 자동으로 적용되지 않음
- 라우터를 사용하여 개발한 경우 최상위 라우터 컴포넌트 요소의 속성으로 아래와 같이 세팅해야만 나옴(하지 않으면 흰 화면만 출력됨)

라우터를 세팅한 index.js파일에서

<BrowserRouter basename={process.env.PUBLIC_URL}>

basename={process.env.PUBLIC_URL}
이 속성은 package.json파일의 "homepage" 속성
값을 읽어온다!
라우팅연결시 이 주소로 정확한 라우팅이 되도록
셋팅해준다!
(주의: 개발소스로 띄울때는 주석처리하고 아무것도 없는 BrowserRouter를 사용한다.)

->>>> 추가 수정하기
루트로 돌아올 때 슬래시 만으로 돌아오면 루트에 슬래시 없는 주소가 리턴되어 이미지 경로가 깨진다.

로고를 클릭하여 첫페이지 띄울 때 슬래시 없는 루트 페이지를 로딩함으로 인해 이미지 경로가 깨짐
따라서 첫페이지는 첫페이지용 라우트를 따로 만들고 이것을 연결해준다.

(1)index.js
<Route path='main' element={<Main />}/>

(2) Layout.js
<Link to="/main"><Logo gb="top"/></Link>