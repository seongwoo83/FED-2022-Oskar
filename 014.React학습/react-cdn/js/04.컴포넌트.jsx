// 04.컴포넌트 JSX

/****************************************************************
    [ 리액트 컴포넌트 ]
    - 컴포넌트는 HTML요소를 반환하는 함수다

    [ 특징 ]
    1. 컴포넌트는 독립적이고 재사용이 가능한 코드 집합
    2. JS의 함수와 비슷하지만 HTML 코드 반환이 필수라는 점이 다름
    3. 컴포넌는는 다음 두 가지로 생성가능하다
        1) 클래스형 컴포넌트
        2) 함수형 컴포넌트
        (-> 함수형 컴포넌트에 집중할 예정)

    -> 클래스형 컴포넌트는 리액트 초중기에 주로 사용되었으나, React 16.8버전에서
    Hooks와 함께는 더이상 사용되지 않는다.
    Hooks는 함수형 컴포넌트에서만 사용가능 하다
    __________________________________

    [ 첫 번째 컴포넌트 만들기 ]
    - 리액트 컴포넌트 이름은 반드시 첫 글자가 대문자로 만듦
    (지키지 않으면 적용되지 않음)

    [ 클래스 컴포넌트 ]
    - 클래스 컴포넌트에서는 extends React.Component 상속문이 포함되어야 함

    -> 컴포넌트에서도 메서드가 필요함
    render()메서드는 HTML을 반환함
    (함수형 컴포넌트의 return 키워드를 사용할 수 있는 역할을 함)
****************************************************************/

//  [ 클래스형 컴포넌트 만들기 ]
class Gogh extends React.Component{
    // render() 메서드 사용함
    render(){
        // HTML 태그 return
        return (
            <React.Fragment>
                <h2>안녕 나는 고흐 그림이야</h2>
                <img src="./images/01.png" alt=" 고흐1" />
                {/* 홀로태그는 반드시 끝에 닫아준다 */}
            </React.Fragment>
            )
    }//////////////////////// render()
}/////////////////////////// Gogh 컴포넌트

// 렌더링하기
const root1 = ReactDOM.createRoot(document.getElementById("root1"));
root1.render(<Gogh />);
// render(출력할요소)
// 출력할요소 -> 클래스명을 호출하면 구성한 태그가 들어옴
// 클래스 호출법: <클래스명 />

/****************************************************************

****************************************************************/